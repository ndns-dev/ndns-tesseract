# Stage 1: Tesseract 및 Leptonica 빌드를 위한 환경 설정
# AWS Lambda Go 런타임 (Amazon Linux 2 기반)의 x86_64 이미지 사용
FROM public.ecr.aws/lambda/provided:al2.2025.06.17.12

# 빌드 도구 및 런타임 의존성 설치
RUN yum update -y && \
    yum install -y \
    aclocal autoconf automake cmake freetype-devel gcc gcc-c++ \
    git lcms2-devel libjpeg-devel libjpeg-turbo-devel autogen libtool \
    libpng-devel libtiff-devel libwebp-devel libzip-devel make zlib-devel wget \
    fontconfig pango cairo pixman-devel \
    golang \
    && yum clean all && rm -rf /var/cache/yum

# Tesseract 및 Leptonica 버전 환경 변수 설정
ENV LEPTONICA_VERSION="1.83.0"
ENV TESSERACT_VERSION="5.3.0"

WORKDIR /tmp/

# Tesseract 빌드 스크립트 복사 및 실행 권한 부여
COPY build_tesseract.sh /tmp/build_tesseract.sh
RUN chmod +x /tmp/build_tesseract.sh

# 빌드 스크립트 실행
RUN /tmp/build_tesseract.sh

ENV TESSDATA_PREFIX=/opt/share/tessdata
ENV LD_LIBRARY_PATH=/opt/lib:/usr/local/lib:$LD_LIBRARY_PATH

# Go Lambda 핸들러 빌드 및 복사
WORKDIR ${LAMBDA_TASK_ROOT}

# GOPROXY를 direct로 설정하여 Go 모듈을 직접 다운로드하도록 합니다.
ENV GOPROXY=direct

COPY go.mod go.sum ./
RUN go mod download

COPY . .

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main main.go
RUN mv main bootstrap

ENTRYPOINT ["/var/task/bootstrap"]

CMD ["main"]